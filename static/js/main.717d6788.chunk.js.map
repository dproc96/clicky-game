{"version":3,"sources":["components/Title.js","components/Description.js","components/Score.js","components/Timer.js","components/Header.js","components/ClickyImage.js","components/Warning.js","components/ClickyCard.js","components/ClickyBoard.js","App.js","serviceWorker.js","index.js","data/cards.js"],"names":["Title","style","fontSize","margin","this","props","children","React","Component","Description","Score","score","current","high","Timer","time","Header","backgroundColor","color","textAlign","padding","textShadow","filter","position","width","top","zIndex","boxShadow","ClickyImage","draggable","height","objectFit","alt","name","src","image","Warning","left","display","hidden","ClickyCard","state","hovered","mouseDown","onHover","setState","onHoverEnd","handleClick","id","handleMouseDown","wasClicked","handleMouseUp","border","borderRadius","cursor","onMouseDown","onMouseUp","onClick","onMouseOver","onMouseOut","ClickyBoard","cards","map","card","flexWrap","maxWidth","App","resetGame","initialState","i","gameEnd","localHighScore","localStorage","getItem","x","setItem","sort","Math","random","timer","interval","setInterval","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","href"],"mappings":"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","file":"static/js/main.717d6788.chunk.js","sourcesContent":["import React from 'react';\n\nclass Title extends React.Component {\n    render() {\n        const style = {\n            fontSize: \"32px\",\n            margin: \"10px\"\n        }\n        return (\n            <h1 style={style}>{this.props.children}</h1>\n        )\n    }\n}\n\nexport default Title;","import React from 'react';\n\nclass Description extends React.Component {\n    render() {\n        return (\n            <p>{this.props.children}</p>\n        )\n    }\n}\n\nexport default Description;","import React from 'react';\n\nclass Score extends React.Component {\n    render() {\n        const style = {\n            fontSize: \"18px\"\n        }\n        return (\n            <p style={style}>Score: {this.props.score.current} || High Score: {this.props.score.high}</p>\n        )\n    }\n}\n\nexport default Score;","import React from 'react';\n\nclass Timer extends React.Component {\n    render() {\n        return (\n            <p>Click an Image: {this.props.time}</p>\n        )\n    }\n}\n\nexport default Timer;","import React from 'react';\nimport Title from './Title';\nimport Description from './Description';\nimport Score from './Score';\nimport Timer from './Timer';\n\nclass Header extends React.Component {\n    render() {\n        const style = {\n            backgroundColor: \"#d85411\",\n            color: \"#eeeeee\",\n            textAlign: \"center\",\n            padding: \"20px\",\n            textShadow: \"2px 2px 5px rgba(0, 0, 0, 0.4)\",\n            filter: \"opacity(90%)\",\n            position: \"fixed\",\n            width: \"100%\",\n            top: \"0\",\n            zIndex: \"2\",\n            boxShadow: \"2px 2px 2px 2px rgba(0, 0, 0, 0.4)\"\n        }\n        return (\n            <div style={style}>\n                <Title>Click Me Spongebob</Title>\n                <Description>Click an image to gain points, but don't click any image more than once. Every 12 points, you can click all images again.</Description>\n                <Score score={this.props.score} />\n                <Timer time={this.props.time} />\n            </div>\n        )\n    }\n}\n\nexport default Header;","import React from 'react';\n\nclass ClickyImage extends React.Component {\n    render() {\n        const style = {\n            width: \"100%\",\n            height: \"100%\",\n            objectFit: \"cover\"\n        }\n        return (\n            <img draggable={false} style={style} alt={this.props.name} src={this.props.image} />\n        )\n    }\n}\n\nexport default ClickyImage;","import React from 'react';\n\nclass Warning extends React.Component {\n    render() {\n        const style = {\n            position: \"absolute\",\n            margin: \"-10px -60px\",\n            left: \"50%\",\n            top: \"50%\",\n            display: this.props.hidden ? \"none\" : \"block\",\n            zIndex: 1,\n            textShadow: \"2px 2px 5px rgba(0, 0, 0, 0.4)\",\n            color: \"#eeeeee\"\n        }\n        return (\n            <p style={style}>{this.props.children}</p>\n        )\n    }\n}\n\nexport default Warning;","import React from 'react';\nimport ClickyImage from './ClickyImage';\nimport Warning from './Warning';\n\nclass ClickyCard extends React.Component {\n    state = {\n        hovered: false,\n        mouseDown: false\n    }\n    onHover = () => {\n        this.setState({ hovered: true });\n    }\n    onHoverEnd = () => {\n        this.setState({ hovered: false });\n    }\n    handleClick = () => {\n        this.props.handleClick(this.props.id)\n    }\n    handleMouseDown = () => {\n        if (this.props.wasClicked) {\n            this.setState({ mouseDown: true })\n        }\n    }\n    handleMouseUp = () => {\n        this.setState({ mouseDown: false })\n    }\n    render() {\n        const style = {\n            width: this.state.hovered ? \"210px\" : \"200px\",\n            height: this.state.hovered ? \"210px\" : \"200px\",\n            margin: this.state.hovered ? \"5px\" : \"10px\",\n            border: \"1px #bbbbbb solid\",\n            backgroundColor: this.state.mouseDown ? \"#ff0039\" : \"#eeeeee\",\n            boxShadow: \"2px 2px 2px 2px rgba(0, 0, 0, 0.4)\",\n            borderRadius: \"3px\",\n            cursor: this.state.hovered ? \"pointer\" : \"auto\",\n            position: \"relative\"\n        }\n        return (\n            <div style={style} onMouseDown={this.handleMouseDown} onMouseUp={this.handleMouseUp} onClick={this.handleClick} onMouseOver={this.onHover} onMouseOut={this.onHoverEnd}>\n                <ClickyImage image={this.props.image} name={this.props.name} />\n                <Warning hidden={!this.state.mouseDown}>Barnacles! You Lost!</Warning>\n            </div>\n        )\n    }\n}\n\nexport default ClickyCard;","import React from 'react';\nimport ClickyCard from './ClickyCard';\n\nclass ClickyBoard extends React.Component {\n    render() {\n        const style = {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            maxWidth: \"90%\",\n            width: \"888px\",\n            margin: \"180px auto 10px auto\"\n        }\n        const cards = this.props.cards.map(card => {\n            return <ClickyCard wasClicked={card.wasClicked} id={card.id} handleClick={this.props.handleClick} image={card.image} name={card.name} />\n        })\n        return (\n            <div style={style}>\n                {cards}\n            </div>\n        )\n    }\n}\n\nexport default ClickyBoard;","import React from 'react';\nimport Header from './components/Header';\nimport ClickyBoard from './components/ClickyBoard';\nimport cards from './data/cards';\n\n\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.initialState = {\n            cards: cards.map((card, i) => {\n                card.wasClicked = false;\n                card.id = i;\n                return card;\n            }).sort(() => {\n                return 0.5 - Math.random();\n            }),\n            score: {\n                current: 0,\n                high: localStorage.getItem(\"highScore\") || 0\n            },\n            time: 5\n        }\n        this.state = {...this.initialState}\n    }\n    resetGame = () => {\n        let state = {...this.initialState};\n        state.score.high = this.state.score.high;\n        this.setState(state);\n    }\n    handleClick = (i) => {\n        let gameEnd = false;\n        const localHighScore = localStorage.getItem(\"highScore\") || 0;\n        const score = {...this.state.score};\n        let cards = [...this.state.cards.map(x => {return {...x}})].map(card => {\n            if (card.id === i && !card.wasClicked) {\n                card.wasClicked = true;\n                score.current++;\n                if (score.current > score.high) {\n                    score.high = score.current;\n                }\n                if (score.high > localHighScore) {\n                    localStorage.setItem(\"highScore\", score.high);\n                }\n            }\n            else if (card.id === i && card.wasClicked) {\n                gameEnd = true;\n            }\n            return card\n        }).sort(() => {\n            return 0.5 - Math.random();\n        })\n        if (gameEnd) {\n            this.resetGame()\n        }\n        else {\n            if (score.current % 12 === 0) {\n                cards = cards.map(card => {\n                    card.wasClicked = false;\n                    return card;\n                })\n            }\n            this.setState({\n                cards: cards,\n                score: score,\n                time: 5\n            });\n        }\n    }\n    timer = () => {\n        const time = this.state.time - 1;\n        if (time === 0) {\n            this.resetGame()\n        }\n        else {\n            this.setState({ time: time })\n        }\n    }\n    render() {\n        return (\n            <div>\n                <Header time={this.state.time} score={this.state.score} />\n                <ClickyBoard handleClick={this.handleClick} cards={this.state.cards} />\n            </div>\n        )\n    }\n    componentDidMount() {\n        this.interval = setInterval(this.timer, 1000);\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = [\n    {\n        name: 'Spongebob',\n        image: '/images/spongebob.png'\n    },\n    {\n        name: 'Gary',\n        image: '/images/gary.png'\n    },\n    {\n        name: 'Hash Slinging... Mash Wringing... Pash Bringing... Hash Slinging Slasher',\n        image: window.location.href + '/images/hash.png'\n    },\n    {\n        name: 'Jellyfish',\n        image: window.location.href + '/images/jellyfish.png'\n    },\n    {\n        name: 'Mister Krabs',\n        image: window.location.href + '/images/krabs.png'\n    },\n    {\n        name: 'The My Leg Guy',\n        image: window.location.href + '/images/myleg.png'\n    },\n    {\n        name: 'Patrick',\n        image: window.location.href + '/images/patrick.png'\n    },\n    {\n        name: 'Pearl',\n        image: window.location.href + '/images/pearl.png'\n    },\n    {\n        name: 'Plankton',\n        image: window.location.href + '/images/plankton.png'\n    },\n    {\n        name: 'Mrs. Puff',\n        image: window.location.href + '/images/puff.png'\n    },\n    {\n        name: 'Sandy',\n        image: window.location.href + '/images/sandy.png'\n    },\n    {\n        name: 'Squidward',\n        image: window.location.href + '/images/squidward.png'\n    }\n]"],"sourceRoot":""}